sourceSets {

    modImpl {
        compileClasspath += main.compileClasspath
        java.srcDir("src/modImplShared/java")
    }

}

modloader {
    importMetadata findProject(":forge")
    mainModSource = sourceSets.modImpl
}

tasks.register("neoFakeMeta") {
    var out = project.layout.buildDirectory.dir("generated/neoStuff").get()
    outputs.dir(out)
    doLast {
        var of = out.file("META-INF/MANIFEST.MF").asFile
        of.parentFile.mkdirs()
        of.text = "FMLModType: LIBRARY\n"
    }
}

tasks.processModRunResources.from(tasks.neoFakeMeta.outputs)

subsystems {
    conventions {
        sourceSets {
            it.shouldMainSourceSetBeAutomaticallyAddedToRuns(false)
        }
    }
}

configurations {
    modRunImplementation.extendsFrom implementation
}

[jar, devJar].each { j ->
    j.manifest {
        attributes(["FMLModType": "LIBRARY"])
    }
    j.dependsOn(project(":neo20").tasks.classes)
    j.from project(":neo20").sourceSets.main.output
}

tasks.register("modImplJar", Jar) {
    archiveBaseName = "ElecLoaderMod"
    from sourceSets.modImpl.output
    manifest.attributes(["FMLModType": "MOD", "MixinConnector": "nl.elec332.minecraft.loader.impl.fmod.ForgeLikeMixinConnector"])
}
